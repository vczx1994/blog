(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{691:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jwt-实践应用以及不适用特殊案例思考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt-实践应用以及不适用特殊案例思考"}},[t._v("#")]),t._v(" JWT 实践应用以及不适用特殊案例思考")]),t._v(" "),a("p",[t._v("JSON Web Token 是 "),a("a",{attrs:{href:"https://tools.ietf.org/html/rfc7519",target:"_blank",rel:"noopener noreferrer"}},[t._v("rfc7519"),a("OutboundLink")],1),t._v(" 出的一份标准，使用 JSON 来传递数据，用于判定用户是否登录状态。")]),t._v(" "),a("p",[t._v("jwt 之前，使用 "),a("code",[t._v("session")]),t._v(" 来做用户认证。")]),t._v(" "),a("blockquote",[a("p",[t._v("以下代码均使用 javascript 编写。")])]),t._v(" "),a("ul",[a("li",[t._v("原文链接: "),a("a",{attrs:{href:"https://shanyue.tech/post/jwt-guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("山月的博客"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[t._v("#")]),t._v(" session")]),t._v(" "),a("p",[t._v("传统判断是否登录的方式是使用 "),a("code",[t._v("session + token")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("token")]),t._v(" 是指在客户端使用 token 作为用户状态凭证，浏览器一般存储在 "),a("code",[t._v("localStorage")]),t._v(" 或者 "),a("code",[t._v("cookie")]),t._v(" 中。")]),t._v(" "),a("p",[a("code",[t._v("session")]),t._v(" 是指在服务器端使用 redis 或者 sql 类数据库，存储 user_id 以及 token 的键值对关系，基本工作原理如下。")]),t._v(" "),a("p",[t._v("在服务器端使用 "),a("code",[t._v("sessions")]),t._v(" 存储键值对")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sessions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABCED1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10086")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CDEFA0"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10010")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("每次客户端请求带权限数据时携带 token，在服务器端根据 token 与 sessions 获取 user_id， 完成认证过程")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserIdByToken")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("token")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sessions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果存储在 "),a("code",[t._v("cookie")]),t._v(" 中就是经常听到的 "),a("code",[t._v("session + cookie")]),t._v(" 的登录方案。其实存储在 "),a("code",[t._v("cookie")]),t._v("，"),a("code",[t._v("localStorage")]),t._v(" 甚至 "),a("code",[t._v("IndexedDB")]),t._v(" 或者 "),a("code",[t._v("WebSQL")]),t._v(" 各有利弊，核心思想一致。")]),t._v(" "),a("p",[t._v("关于 "),a("code",[t._v("cookie")]),t._v(" 以及 "),a("code",[t._v("token")]),t._v(" 优缺点，在 "),a("a",{attrs:{href:"https://stackoverflow.com/questions/17000835/token-authentication-vs-cookies",target:"_blank",rel:"noopener noreferrer"}},[t._v("token authetication vs cookies"),a("OutboundLink")],1),t._v(" 中有讨论。")]),t._v(" "),a("p",[t._v("如果不使用 cookie，可以采取 "),a("code",[t._v("localStorage + Authorization")]),t._v(" 的方式进行认证，更加无状态化")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http 的头，每次请求权限接口时，需要携带 Authorization Header")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" headers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Authorization"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Bearer ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'token'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("推荐一个前端的存储库 "),a("a",{attrs:{href:"https://github.com/localForage/localForage",target:"_blank",rel:"noopener noreferrer"}},[t._v("localForage"),a("OutboundLink")],1),t._v("，使用 "),a("code",[t._v("IndexedDB")]),t._v("，"),a("code",[t._v("WebSQL")]),t._v(" 以及 "),a("code",[t._v("IndexedDB")]),t._v(" 做键值对存储。")])]),t._v(" "),a("h2",{attrs:{id:"无状态登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无状态登录"}},[t._v("#")]),t._v(" 无状态登录")]),t._v(" "),a("p",[a("code",[t._v("session")]),t._v(" 需要在数据库中保持用户及token对应信息，所以叫 "),a("strong",[t._v("有状态")]),t._v("。")]),t._v(" "),a("p",[t._v("试想一下，如何在数据库中不保持用户状态也可以登录。")]),t._v(" "),a("p",[t._v("第一种方法： "),a("strong",[t._v("前端直接传 user_id 给服务端")])]),t._v(" "),a("p",[t._v("缺点也特别特别明显，容易被用户篡改成任意 user_id，权限设置形同虚设。不过思路正确，接着往下走。")]),t._v(" "),a("p",[t._v("改进： "),a("strong",[t._v("对 user_id 进行对称加密")])]),t._v(" "),a("p",[t._v("服务端对 user_id 进行对称加密后，作为 token 返回客户端，作为用户状态凭证。比上边略微强点，但由于对称加密，选择合适的算法以及密钥比较重要")]),t._v(" "),a("p",[t._v("改进： "),a("strong",[t._v("对 user_id 不需要加密，只需要进行签名，保证不被篡改")])]),t._v(" "),a("p",[t._v("这便是 jwt 的思想：user_id，加密算法和签名组成 token 一起存储到客户端，每当客户端请求接口时携带 token，服务器根据 token 解析出加密算法与 user_id 来判断签名是否一致。")]),t._v(" "),a("h2",{attrs:{id:"json-web-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-web-token"}},[t._v("#")]),t._v(" Json Web Token")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://jwt.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jwt.io"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("jwt 根据 "),a("code",[t._v("Header")]),t._v("，"),a("code",[t._v("Payload")]),t._v(" 以及 "),a("code",[t._v("Signature")]),t._v(" 三个部分由 "),a("code",[t._v(".")]),t._v(" 拼接而成。")]),t._v(" "),a("h3",{attrs:{id:"header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header"}},[t._v("#")]),t._v(" Header")]),t._v(" "),a("p",[t._v("Header 由非对称加密算法和类型组成，如下")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" header "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加密算法")]),t._v("\n  alg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HS256'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jwt'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"payload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#payload"}},[t._v("#")]),t._v(" Payload")]),t._v(" "),a("p",[t._v("Payload 中由 "),a("a",{attrs:{href:"https://tools.ietf.org/html/rfc7519#section-4.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Registered Claim"),a("OutboundLink")],1),t._v(" 以及需要通信的数据组成。这些数据字段也叫 "),a("code",[t._v("Claim")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("Registered Claim")]),t._v(" 中比较重要的是 "),a("code",[t._v('"exp" Claim')]),t._v(" 表示过期时间，在用户登录时会设置过期时间。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" payload "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示 jwt 创建时间")]),t._v("\n  iat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1532135735")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示 jwt 过期时间")]),t._v("\n  exp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1532136735")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户 id，用以通信")]),t._v("\n  user_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10086")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"signature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signature"}},[t._v("#")]),t._v(" Signature")]),t._v(" "),a("p",[a("code",[t._v("Signature")]),t._v(" 由 "),a("code",[t._v("Header")]),t._v("，"),a("code",[t._v("Payload")]),t._v(" 以及 "),a("code",[t._v("secretOrPrivateKey")]),t._v(" 计算而成。"),a("code",[t._v("secretOrPrivateKey")]),t._v(" 作为敏感数据存储在服务器端，可以考虑使用 "),a("code",[t._v("vault secret")]),t._v(" 或者 "),a("code",[t._v("k8s secret")])]),t._v(" "),a("p",[t._v("对于 "),a("code",[t._v("secretOrPrivateKey")]),t._v("，如果加密算法采用 "),a("code",[t._v("HMAC")]),t._v("，则为字符串，如果采用 "),a("code",[t._v("RSA")]),t._v(" 或者 "),a("code",[t._v("ECDSA")]),t._v("，则为 PrivateKey。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由 HMACSHA256 算法进行签名，secret 不能外泄")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sign "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HMACSHA256")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" base64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jwt 由三部分拼接而成")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" jwt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" base64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" sign\n")])])]),a("blockquote",[a("p",[t._v("从生成 jwt 规则可知客户端可以解析出 payload，因此不要在 payload 中携带敏感数据，比如用户密码")])]),t._v(" "),a("h3",{attrs:{id:"校验过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#校验过程"}},[t._v("#")]),t._v(" 校验过程")]),t._v(" "),a("p",[t._v("在生成规则中可知，jwt 前两部分是对 header 以及 payload 的 base64 编码。")]),t._v(" "),a("p",[a("strong",[t._v("当服务器收到客户端的 token 后，解析前两部分得到 header 以及 payload，并使用 header 中的算法与 secretOrPrivateKey 进行签名，判断与 jwt 中携带的签名是否一致。")])]),t._v(" "),a("blockquote",[a("p",[t._v("带个问题，如何判断 token 过期？")])]),t._v(" "),a("h2",{attrs:{id:"应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),a("p",[t._v("由上可知，jwt 并不对数据进行加密，而是对数据进行签名，保证不被篡改。"),a("strong",[t._v("除了在登录中可以用到，在进行邮箱校验，图形验证码和短信验证码时也可以用到。")])]),t._v(" "),a("h3",{attrs:{id:"图形验证码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图形验证码"}},[t._v("#")]),t._v(" 图形验证码")]),t._v(" "),a("p",[t._v("在登录时，输入密码错误次数过多会出现图形验证码。")]),t._v(" "),a("p",[t._v("图形验证码的原理是给客户端一个图形，并且在服务器端保存与这个图片配对的字符串，以前也大都通过 session 来实现。")]),t._v(" "),a("p",[t._v("可以把验证码配对的字符串作为 secret，进行无状态校验。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" jwt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jsonwebtoken'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设验证码为字符验证码，字符为 ACDE，10分钟失效")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" token "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jwt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" secrect "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ACDE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" expiresIn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" codeImage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getImageFromString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ACDE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给前端的响应")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 验证码图片的 token，从中可以校验前端发送的验证码")]),t._v("\n  token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 验证码图片")]),t._v("\n  codeImage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("短信验证码与图形验证码同理")])]),t._v(" "),a("h3",{attrs:{id:"邮箱校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#邮箱校验"}},[t._v("#")]),t._v(" 邮箱校验")]),t._v(" "),a("p",[t._v("现在网站在注册成功后会进行邮箱校验，具体做法是给邮箱发一个链接，用户点开链接校验成功。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把邮箱以及用户id绑定在一起")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jwt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userId "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" expiresIn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在此链接校验验证码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" link "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("https://example.com/code=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("code"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),a("h2",{attrs:{id:"无状态-vs-有状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无状态-vs-有状态"}},[t._v("#")]),t._v(" 无状态 VS 有状态")]),t._v(" "),a("p",[t._v("关于无状态和有状态，在其它技术方向也有对比，比如 React 的 "),a("code",[t._v("stateLess component")]),t._v(" 以及 "),a("code",[t._v("stateful component")]),t._v("，函数式编程中的副作用可以理解为状态，http 也是一个无状态协议，需要靠 header 以及 cookie 携带状态。")]),t._v(" "),a("p",[t._v("在用户认证这里，有无状态是指是否依赖外部数据存储，如 mysql，redis 等。")]),t._v(" "),a("h2",{attrs:{id:"案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),a("p",[t._v("思考以下几个关于登录的问题如何使用 session 以及 jwt 实现，来更加清楚 "),a("code",[t._v("jwt")]),t._v(" 的使用场景")]),t._v(" "),a("h3",{attrs:{id:"当用户注销时-如何使该-token-失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当用户注销时-如何使该-token-失效"}},[t._v("#")]),t._v(" 当用户注销时，如何使该 token 失效")]),t._v(" "),a("p",[t._v("因为 jwt 无状态，不保存用户设备信息，没法单纯使用它完成以上问题，可以再利用数据库保存一些状态完成。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("session")]),t._v(": 只需要把 user_id 对应的 token 清掉即可")]),t._v(" "),a("li",[a("code",[t._v("jwt")]),t._v(": 使用 redis，维护一张黑名单，用户注销时把该 token 加入黑名单，过期时间与 jwt 的过期时间保持一致。")])]),t._v(" "),a("h3",{attrs:{id:"如何允许用户只能在一个设备登录-如微信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何允许用户只能在一个设备登录-如微信"}},[t._v("#")]),t._v(" 如何允许用户只能在一个设备登录，如微信")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("session")]),t._v(": 使用 sql 类数据库，对用户数据库表添加 token 字段并加索引，每次登陆重置 token 字段，每次请求需要权限接口时，根据 token 查找 user_id")]),t._v(" "),a("li",[a("code",[t._v("jwt")]),t._v(": 假使使用 sql 类数据库，对用户数据库表添加 token 字段(不需要添加索引)，每次登陆重置 token 字段，每次请求需要权限接口时，根据 jwt 获取 user_id，根据 user_id 查用户表获取 token 判断 token 是否一致。另外也可以使用计数器的方法，如下一个问题。")])]),t._v(" "),a("p",[t._v("对于这个需求，session 稍微简单些，毕竟 jwt 也需要依赖数据库。")]),t._v(" "),a("h3",{attrs:{id:"如何允许用户只能在最近五个设备登录-如诸多播放器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何允许用户只能在最近五个设备登录-如诸多播放器"}},[t._v("#")]),t._v(" 如何允许用户只能在最近五个设备登录，如诸多播放器")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("session")]),t._v(": 使用 sql 类数据库，创建 token 数据库表，有 id, token, user_id 三个字段，user 与 token 表为 1:m 关系。每次登录添加一行记录。根据 token 获取 user_id，再根据 user_id 获取该用户有多少设备登录，超过 5 个，则删除最小 id 一行。")]),t._v(" "),a("li",[a("code",[t._v("jwt")]),t._v(": 使用计数器，使用 sql 类数据库，在用户表中添加字段 count，默认值为 0，每次登录 count 字段自增1，每次登录创建的 jwt 的 Payload 中携带数据 current_count 为用户的 count 值。每次请求权限接口时，根据 jwt 获取 count 以及 current_count，根据 user_id 查用户表获取 count，判断与 current_count 差值是否小于 5")])]),t._v(" "),a("p",[t._v("对于这个需求，jwt 略简单些，而使用 session 还需要多维护一张 token 表。")]),t._v(" "),a("h3",{attrs:{id:"如何允许用户只能在最近五个设备登录-而且使某一用户踢掉除现有设备外的其它所有设备-如诸多播放器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何允许用户只能在最近五个设备登录-而且使某一用户踢掉除现有设备外的其它所有设备-如诸多播放器"}},[t._v("#")]),t._v(" 如何允许用户只能在最近五个设备登录，而且使某一用户踢掉除现有设备外的其它所有设备，如诸多播放器")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("session")]),t._v(": 在上一个问题的基础上，删掉该设备以外其它所有的token记录。")]),t._v(" "),a("li",[a("code",[t._v("jwt")]),t._v(": 在上一个问题的基础上，对 count + 5，并对该设备重新赋值为新的 count。")])]),t._v(" "),a("h3",{attrs:{id:"如何显示该用户登录设备列表-如何踢掉特定用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何显示该用户登录设备列表-如何踢掉特定用户"}},[t._v("#")]),t._v(" 如何显示该用户登录设备列表 / 如何踢掉特定用户")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("session")]),t._v(": 在 token 表中新加列 device")]),t._v(" "),a("li",[a("code",[t._v("jwt")]),t._v(": 需要服务器端保持设备列表信息，做法与 session 一样，使用 jwt 意义不大")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("从以上问题得知，如果不需要控制登录设备数量以及设备信息，无状态的 jwt 是一个不错的选择。一旦涉及到了设备信息，就需要对 jwt 添加额外的状态支持，增加了认证的复杂度，此时选用 session 是一个不错的选择。")]),t._v(" "),a("p",[t._v("jwt 不是万能的，是否采用 jwt，需要根据业务需求来确定。")])])}),[],!1,null,null,null);s.default=n.exports}}]);