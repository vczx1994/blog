(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{690:function(a,s,e){"use strict";e.r(s);var t=e(42),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("最近工作中需要使用到 "),e("code",[a._v("Kafka")]),a._v("，基于 "),e("code",[a._v("mysql")]),a._v(" 的 "),e("code",[a._v("bin log")]),a._v(" 与 "),e("code",[a._v("postgres")]),a._v(" 的 "),e("code",[a._v("WAL log")]),a._v(" 把数据发布到 "),e("code",[a._v("Kafka")]),a._v("。"),e("code",[a._v("Kafka")]),a._v(" 另外一大用途主要用作消息中间件，虽然没有在业务系统中使用它作为消息队列，但这也是一个令人心动的功能。趁此契机，从环境搭建，系统原理，到生产使用再系统过一遍 "),e("code",[a._v("Kafka")]),a._v("。")]),a._v(" "),e("h2",{attrs:{id:"术语"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#术语"}},[a._v("#")]),a._v(" 术语")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Stream")]),a._v(" "),e("p",[a._v("先把它理解成数据。")])]),a._v(" "),e("li",[e("p",[a._v("Topic")]),a._v(" "),e("p",[a._v("类似于数据库的一个表，数据流 record 的集合。对于它的每一条记录都有 key，value 和 timestamp，很像是时序数据库了")])]),a._v(" "),e("li",[e("p",[a._v("Publish")]),a._v(" "),e("p",[a._v("发布，Producer 会产生数据到 Topics，这个过程就叫 Publish")])]),a._v(" "),e("li",[e("p",[a._v("Subscribe")]),a._v(" "),e("p",[a._v("订阅，当 Producer 生产数据后，Consumer 会从 kafka 接收到数据，或者叫读取数据，这个过程叫 Subscribe")])]),a._v(" "),e("li",[e("p",[a._v("Producer")]),a._v(" "),e("p",[a._v("数据的生产者，实时发送数据到 Topics。可以为各个数据库，或者各个应用的日志。")])]),a._v(" "),e("li",[e("p",[a._v("Consumer")]),a._v(" "),e("p",[a._v("数据的消费者，用来读取数据，或者监听数据的产生做一些处理")])]),a._v(" "),e("li",[e("p",[a._v("broker")]),a._v(" "),e("p",[e("code",[a._v("Kafka")]),a._v(" 为分布式流处理平台，则它是由多个实例组成，每个实例称为 "),e("code",[a._v("broker")])])])]),a._v(" "),e("h2",{attrs:{id:"用来做什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用来做什么"}},[a._v("#")]),a._v(" 用来做什么")]),a._v(" "),e("p",[a._v("一个工具可以用来做什么，是我们为什么要学习他的主要原因，另外了解它和同类产品比有什么优缺点，可以更好地根据自己的需求做出抉择。官网这么介绍 "),e("code",[a._v("Kafka")])]),a._v(" "),e("blockquote",[e("p",[a._v("Apache Kafka® is a distributed streaming platform.")])]),a._v(" "),e("p",[a._v("在官网描述 "),e("code",[a._v("Kafka")]),a._v(" 是一个分布式流处理(distributed streaming)平台，作为一个流处理的工具，它可以应用在一下几方面。")]),a._v(" "),e("ul",[e("li",[a._v("消息队列")]),a._v(" "),e("li",[a._v("流数据处理")]),a._v(" "),e("li",[a._v("日志处理")])]),a._v(" "),e("blockquote",[e("p",[a._v("参考 "),e("a",{attrs:{href:"http://kafka.apache.org/uses",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://kafka.apache.org/uses"),e("OutboundLink")],1)])]),a._v(" "),e("p",[a._v("它有四个核心 API")]),a._v(" "),e("ul",[e("li",[a._v("Producer API")]),a._v(" "),e("li",[a._v("Consumer API")]),a._v(" "),e("li",[a._v("Streams API")]),a._v(" "),e("li",[a._v("Conector API")])]),a._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),e("p",[a._v("CentOS")]),a._v(" "),e("h3",{attrs:{id:"安装-java"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-java"}},[a._v("#")]),a._v(" 安装 java")]),a._v(" "),e("p",[a._v("kafka 依赖于 "),e("code",[a._v("java")]),a._v(" 的环境，所以第一步先安装 JDK 和 JRE。")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("yum "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" java-1.8.0-openjdk\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" java-1.8.0-openjdk-devel\n")])])]),e("h3",{attrs:{id:"安装-zookeeper-与-kafka"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-zookeeper-与-kafka"}},[a._v("#")]),a._v(" 安装 "),e("code",[a._v("Zookeeper")]),a._v(" 与 "),e("code",[a._v("Kafka")])]),a._v(" "),e("p",[a._v("安装好 java 后按照以下命令安装和启动 "),e("code",[a._v("Kafka")]),a._v("。")]),a._v(" "),e("p",[e("code",[a._v("Kafka")]),a._v(" 依赖于 "),e("code",[a._v("Zookeeper")]),a._v("，启动 "),e("code",[a._v("Kafka")]),a._v(" 之前先启动 "),e("code",[a._v("Zookeeper")]),a._v("。这里启动一个单实例的 "),e("code",[a._v("Kafka")]),a._v("。")]),a._v(" "),e("p",[a._v("关于 "),e("code",[a._v("kafka")]),a._v(" 和 "),e("code",[a._v("Zookeeper")]),a._v(" 的下载地址，可以在国内的镜像源进行下载")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://mirrors.tuna.tsinghua.edu.cn/apache",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://mirrors.tuna.tsinghua.edu.cn/apache"),e("OutboundLink")],1)]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -O http://mirrors.shu.edu.cn/apache/kafka/2.2.0/kafka_2.12-2.2.0.tgz\n\n$ "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在国内可以使用以下镜像源")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# curl -O https://mirrors.tuna.tsinghua.edu.cn/apache/kafka/2.2.0/kafka_2.12-2.2.0.tgz")]),a._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xzf kafka_2.12-2.2.0.tgz\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" kafka_2.12-2.2.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 以以下配置文件启动 Zookeeper")]),a._v("\n$ bin/zookeeper-server-start.sh config/zookeeper.properties\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),a._v("-04-04 "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(":07:30,141"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" INFO binding to port "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),a._v(".0.0/0.0.0.0:2181 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("org.apache.zookeeper.server.NIOServerCnxnFactory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 以以下配置文件启动 Kafka")]),a._v("\n$ bin/kafka-server-start.sh config/server.properties\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),a._v("-04-04 "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(":13:07,794"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" INFO "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("KafkaServer "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("id")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" started "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("kafka.server.KafkaServer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("p",[e("strong",[a._v("启动成功后，"),e("code",[a._v("Zookeeper")]),a._v(" 会占用 2181 端口号，而 "),e("code",[a._v("Kafka")]),a._v(" 会占用 9092 端口号，对于这些特殊服务的端口号需要留意一下，在以下很多命令中需要指定端口号")])]),a._v(" "),e("h3",{attrs:{id:"如何获取版本号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何获取版本号"}},[a._v("#")]),a._v(" 如何获取版本号")]),a._v(" "),e("p",[a._v("如果是自己搭建的 "),e("code",[a._v("Kafka")]),a._v("，自然可以很容易地通过下载包的命名知道版本号。如果是别人搭建的，那又如何获取版本号？")]),a._v(" "),e("p",[a._v("你可以先试一试，"),e("code",[a._v("kafka-topics.sh --version")]),a._v("。")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ ./kafka-topics.sh --version\n"),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.2")]),a._v(".0 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Commit:05fcfde8f69b0349"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("p",[a._v("如果不成功，那说明版本在 2.0 一下，你只能通过安装文件夹下文件的命名用肉眼来辨别了")]),a._v(" "),e("p",[e("strong",[a._v("如果你在 "),e("code",[a._v("kafka_install_dir/libs")]),a._v(" 下发现了文件 "),e("code",[a._v("kafka-clients-2.2.0.jar")]),a._v("，那么它的版本号就是 2.2.0。")])]),a._v(" "),e("h2",{attrs:{id:"hello-world-一个简单的示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hello-world-一个简单的示例"}},[a._v("#")]),a._v(" Hello, world | 一个简单的示例")]),a._v(" "),e("p",[a._v("先开始一个最简单的示例，一方在终端发布数据，一方在终端订阅数据。在这之前，先了解下什么是 Topic")]),a._v(" "),e("h3",{attrs:{id:"topic-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#topic-简介"}},[a._v("#")]),a._v(" Topic 简介")]),a._v(" "),e("p",[a._v("上边术语中提到过，Topic 是数据流的集合，类似于 sql 中的 table，并由 record 组成。")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://shanyue.tech/",alt:"topic"}})]),a._v(" "),e("p",[a._v("如上图，由于 kafka 是分布式的，每个 Topic 由分区日志组成，每个分区日志由 "),e("strong",[a._v("不可变的，顺序的")]),a._v(" record 组成。Consumer 会标记每个分区日志中已处理的 record 位置，即 offset，使用 offset 可以唯一标志每个 record。")]),a._v(" "),e("p",[a._v("多个 Consumer 并不会对已处理数据丢失，数据永久存储在 kafka 上，除非过了 kafka 设置的过期时间。")]),a._v(" "),e("h3",{attrs:{id:"创建-topic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-topic"}},[a._v("#")]),a._v(" 创建 Topic")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建一个 Topic: test")]),a._v("\n$ bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" --partitions "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" --topic "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\nCreated topic test.\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出 Topic 列表")]),a._v("\n$ bin/kafka-topics.sh --list --bootstrap-server localhost:9092\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),e("h3",{attrs:{id:"生产者-producer-消费者-consumer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生产者-producer-消费者-consumer"}},[a._v("#")]),a._v(" 生产者(Producer)/消费者(Consumer)")]),a._v(" "),e("p",[a._v("运行以下命令，从终端生产数据发布消息")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\nhello\nworld\n")])])]),e("p",[a._v("打开消费者，会从终端看到订阅的数据")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" --from-beginning\nhello\nworld\n")])])]),e("p",[a._v("这样，一个简单版的 kafka 的 Demo 完成了。")]),a._v(" "),e("p",[a._v("不过，此时他有两个问题")]),a._v(" "),e("ol",[e("li",[a._v("单节点")]),a._v(" "),e("li",[a._v("数据来源只有终端")])]),a._v(" "),e("p",[a._v("接下来看如何处理这两方面问题")]),a._v(" "),e("h2",{attrs:{id:"多-broker-集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多-broker-集群"}},[a._v("#")]),a._v(" 多 "),e("code",[a._v("Broker")]),a._v(" 集群")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("bin/kafka-server-start.sh config/server.properties\n")])])]),e("p",[a._v("从以上单节点的示例中，我们看到它会读取 "),e("code",[a._v("config/server.properties")]),a._v(" 作为配置文件。")]),a._v(" "),e("blockquote",[e("p",[a._v("默默吐槽下配置文件的 DSL 太多了")])]),a._v(" "),e("p",[a._v("先复制出来两份文件，修改下部分属性，作为三个 broker 的配置文件进行启动，就可以有三个 broker 了")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" config/server.properties config/server-1.properties\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" config/server.properties config/server-2.properties\n")])])]),e("p",[a._v("以下几项是需要修改的配置")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("broker.id")]),a._v(" 代表 broker 的id，全局唯一")]),a._v(" "),e("li",[e("code",[a._v("listeners")]),a._v(" 启动时的端口号，默认是 9092")]),a._v(" "),e("li",[e("code",[a._v("log.dirs")]),a._v(" 日志文件目录")])]),a._v(" "),e("p",[a._v("以下是修改后的配置文件内容")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" config/server-1.properties\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\nbroker.id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("listeners")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("PLAINTEXT://:9093\nlog.dirs"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/tmp/kafka-logs-1\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" config/server-2.properties\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\nbroker.id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("listeners")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("PLAINTEXT://:9094\nlog.dirs"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/tmp/kafka-logs-2\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),e("p",[a._v("接下来启动多个 broker")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("bin/kafka-server-start.sh config/server-1.properties "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\nbin/kafka-server-start.sh config/server-2.properties "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])])]),e("h3",{attrs:{id:"创建一个多-broker-的-topic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建一个多-broker-的-topic"}},[a._v("#")]),a._v(" 创建一个多 broker 的 Topic")]),a._v(" "),e("p",[e("code",[a._v("--replication-facor")]),a._v(" 指定备份数目，现在有三个 broker，因此指定三个备份。")]),a._v(" "),e("p",[a._v("现在有了三个 broker 的地址，现在创建 Topic 时指定 "),e("code",[a._v("Zookeeper")]),a._v(" 地址。")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" --partitions "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" --topic todo\nError "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" executing topic "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" Replication factor: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" larger than available brokers: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),a._v("-04-11 "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("15")]),a._v(":27:28,265"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" ERROR org.apache.kafka.common.errors.InvalidReplicationFactorException: Replication factor: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" larger than available brokers: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(".\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("kafka.admin.TopicCommand$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("p",[a._v("原来是由于我的机器配置太差，内存不足以支持三个副本运行。")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" --partitions "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" --topic todo\nCreated topic todo.\n")])])]),e("p",[a._v("那这时候又引进来了一个新的问题，如何查看目前集群中的 broker 个数")]),a._v(" "),e("h3",{attrs:{id:"如何查看目前的-broker-个数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何查看目前的-broker-个数"}},[a._v("#")]),a._v(" 如何查看目前的 broker 个数")]),a._v(" "),e("p",[a._v("TODO")]),a._v(" "),e("h3",{attrs:{id:"查看-topic-信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-topic-信息"}},[a._v("#")]),a._v(" 查看 Topic 信息")]),a._v(" "),e("p",[a._v("当为 Topic 使用了多个备份时，可以使用 "),e("code",[a._v("--describe")]),a._v(" 查看信息")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic todo\nTopic:todo    PartitionCount:1        ReplicationFactor:2     Configs:segment.bytes"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1073741824")]),a._v("\n        Topic: todo2    Partition: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("    Leader: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("       Replicas: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0,1")]),a._v("   Isr: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0,1")]),a._v("\n")])])]),e("ul",[e("li",[a._v("leader 是负责读写功能的节点")]),a._v(" "),e("li",[a._v("replicas 是负责备份的节点")]),a._v(" "),e("li",[a._v("isr 是目前备份节点还活着的节点，是 replicas 的子集")])]),a._v(" "),e("h3",{attrs:{id:"生产者-消费者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生产者-消费者"}},[a._v("#")]),a._v(" 生产者/消费者")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic todo\nhello\nworld\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic todo\nhello\nworld\n")])])]),e("h2",{attrs:{id:"如何读取数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何读取数据"}},[a._v("#")]),a._v(" 如何读取数据")]),a._v(" "),e("p",[a._v("在 "),e("code",[a._v("mysql")]),a._v(" 或者 "),e("code",[a._v("postgres")]),a._v(" 中可以使用命令行的方式进入数据库，使用 "),e("code",[a._v("select")]),a._v(" 来读取数据库表中的数据。那么如何在 "),e("code",[a._v("kafka")]),a._v(" 中读取 "),e("code",[a._v("Topic")]),a._v(" 的数据呢?")]),a._v(" "),e("p",[a._v("答案是通过 "),e("code",[a._v("Consumer API")]),a._v(" 来读取数据。")]),a._v(" "),e("blockquote",[e("p",[a._v("那可以使用命令行式的交互工具读取数据吗？\n恩，好像不能。")])]),a._v(" "),e("h3",{attrs:{id:"consumer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#consumer"}},[a._v("#")]),a._v(" Consumer")]),a._v(" "),e("p",[a._v("以上无论是单节点还是多节点，我们都是用 Consumer 从终端中读取数据")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group my-group\n")])])]),e("h2",{attrs:{id:"从文件中读取和写入数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从文件中读取和写入数据"}},[a._v("#")]),a._v(" 从文件中读取和写入数据")]),a._v(" "),e("p",[a._v("使用 "),e("code",[a._v("Connect API")]),a._v(" 控制数据从文件中读写")]),a._v(" "),e("p",[a._v("TODO")]),a._v(" "),e("h2",{attrs:{id:"可靠性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可靠性"}},[a._v("#")]),a._v(" 可靠性")]),a._v(" "),e("p",[a._v("At most once——消息可能会丢失但绝不重传。\nAt least once——消息可以重传但绝不丢失。\nExactly once——这正是人们想要的, 每一条消息只被传递一次.")]),a._v(" "),e("h2",{attrs:{id:"kafka-cheat-sheets"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka-cheat-sheets"}},[a._v("#")]),a._v(" Kafka Cheat Sheets")]),a._v(" "),e("h3",{attrs:{id:"查看版本号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看版本号"}},[a._v("#")]),a._v(" 查看版本号")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-topics.sh --version\n"),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.2")]),a._v(".0\n")])])]),e("h3",{attrs:{id:"启动-zookeeper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-zookeeper"}},[a._v("#")]),a._v(" 启动 zookeeper")]),a._v(" "),e("p",[e("code",[a._v("config/zookeeper.properties")]),a._v(" 是 zookeeper 的配置文件")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("bin/zookeeper-server-start.sh config/zookeeper.properties\n")])])]),e("h3",{attrs:{id:"启动-kafka"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-kafka"}},[a._v("#")]),a._v(" 启动 Kafka")]),a._v(" "),e("p",[e("code",[a._v("config/server.properties")]),a._v(" 是 Kafka 的配置文件")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("bin/kafka-server-start.sh config/server.properties\n")])])]),e("h3",{attrs:{id:"创建一个-topic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建一个-topic"}},[a._v("#")]),a._v(" 创建一个 Topic")]),a._v(" "),e("p",[a._v("创建命名为 test 的 Topic")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("--create")]),a._v(" 创建新的 Topic")]),a._v(" "),e("li",[e("code",[a._v("--partitions")]),a._v(" 该 Topic 指定的 partition 个数")]),a._v(" "),e("li",[e("code",[a._v("--replication-factor")]),a._v(" 该 Topic 下的 partition 的备份数目")]),a._v(" "),e("li",[e("code",[a._v("--topic")]),a._v(" 指定的 topic 名称")])]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" --partitions "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" --topic "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),e("h3",{attrs:{id:"查看-topic-列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-topic-列表"}},[a._v("#")]),a._v(" 查看 Topic 列表")]),a._v(" "),e("p",[e("code",[a._v("__consumer_offsets")]),a._v(" 为 "),e("code",[a._v("Kafka")]),a._v(" 自动生成的，代表每个 consumer 的 offset。")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-topics.sh --list --bootstrap-server localhost:9092\n__consumer_offsets\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),e("h3",{attrs:{id:"发布-topic-数据-console-producer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布-topic-数据-console-producer"}},[a._v("#")]),a._v(" 发布 Topic 数据  (console-producer)")]),a._v(" "),e("p",[a._v("以下是使用 "),e("code",[a._v("console-producer")]),a._v(" 发布数据到 "),e("code",[a._v("test")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("--broker-list")]),a._v(" 指定broker的地址，此字段必须")])]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\nhello\nworld\n")])])]),e("h3",{attrs:{id:"订阅-topic-数据-console-consumer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#订阅-topic-数据-console-consumer"}},[a._v("#")]),a._v(" 订阅 Topic 数据  (console-consumer)")]),a._v(" "),e("p",[a._v("以下是使用 "),e("code",[a._v("console-consumer")]),a._v(" 读取 "),e("code",[a._v("test")]),a._v(" 中的数据")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" --from-beginning\nhello\nworld\n")])])]),e("h3",{attrs:{id:"查看-consumer-group-列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-consumer-group-列表"}},[a._v("#")]),a._v(" 查看 Consumer Group 列表")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list\nconsole-consumer-54112\n")])])]),e("h3",{attrs:{id:"查看-consumer-group-中的-consumer-信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-consumer-group-中的-consumer-信息"}},[a._v("#")]),a._v(" 查看 Consumer Group 中的 Consumer 信息")]),a._v(" "),e("p",[a._v("可以查看组内的每个 Consumer 的 id 以及 offset")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group console-consumer-54112\nTOPIC           PARTITION  CURRENT-OFFSET  LOG-END-OFFSET  LAG             CONSUMER-ID                                     HOST            CLIENT-ID\ntodo            "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          -               "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v("              -               consumer-1-ab662bd3-60b3-4e97-829d-84f27a799f0d /192.168.1.214  consumer-1\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);